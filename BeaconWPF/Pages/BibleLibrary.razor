@page "/BibleLibrary"
@inject IBibleService bibleService
@inject ISessionStorageService sessionStorage
@inject IJSRuntime jSRuntime
@implements IDisposable

<div class="-z-10 absolute left-0 top-0 hidden h-full w-16 bg-gray_2 md:block"> </div>

<div class="-z-0 absolute h-40 w-full bg-gradient-to-r from-black to-gray_2"></div>

<div class="relative flex h-full w-full overflow-x-hidden">

    <!-- BOOKS -->
    <div class="z-10 flex h-full w-full flex-col gap-3 self-start rounded-r-3xl bg-gray_2 p-3 md:min-w-56 md:w-56">
        
        <Dropdown Options="bibles" OnOptionChange="OnBibleChange" SelectedOption="@selectedBible"></Dropdown>
            
        <DebounceInput id="BookSearchInput" type="text" class="border-0 h-16 w-full rounded-xl bg-black px-4 text-sm" placeholder="Book" DebounceTime="200"
                       @bind-Value="bookSearchTerm" @bind-Value:event="oninput" OnValueChanged="OnBookInputQuery" @onkeydown="OnBookSearchInputKeyDown" />

        <BookList Books="books" SelectedBook="selectedBook" OnBookChanged="OnBookChange"></BookList>
    </div>


    <!-- CHAPTERS -->
    <div class="z-10 flex h-full w-full flex-col gap-3 self-start rounded-r-3xl p-3 md:min-w-40 md:w-40">
        
        <ToggleButton Icon="M.A" Message="NEWT" Css="invisible pointer-events-none"></ToggleButton>
        <DebounceInput id="ChapterSearchInput" type="text" class="border-0 h-16 w-full rounded-xl bg-black p-4 text-sm" placeholder="Chapter" DebounceTime="400"
                       @bind-Value="chapterSearchTerm" @bind-Value:event="oninput" OnValueChanged="OnChapterInputQuery" />

        <ChapterList Chapters="chapters" SelectedChapter="selectedChapter" OnChapterChanged="OnChapterChange"/>
    </div>

    <div class="-z-0 absolute h-full w-96 rounded-r-3xl bg-gray_3"></div>


    <!-- RIGHT SIDE -->
    <div class="z-20 flex h-full w-full flex-col overflow-x-auto">

        <div class="flex w-full flex-col gap-3 px-3 py-3">
            
            <div class="flex w-full flex-row-reverse gap-3">

                
                <ToggleButton Icon="P" Message="DOUBLE VIEW" 
                    Css="@(isSearchingVerses ? "invisible pointer-events-none" : showDoubleViewOptions ? "border-gray_1" : "invisible pointer-events-none")" IsChecked="doubleViewMode" OnClick="OnDoubleViewModeToggle" />
                
                
                @if (doubleViewMode)
                {
                    <Dropdown SelectedOption="@selectedDoubleViewBible" Options="bibles" OnOptionChange="OnDoubleViewBibleChange" Css="@(showDoubleViewOptions ? "" : "invisible pointer-events-none")"></Dropdown>
                }
            </div>

            <div class="flex w-full justify-between gap-3">

                <DebounceInput id="VerseSearchInput" type="text" class="border-0 h-16 w-20 rounded-xl bg-black px-4 text-sm" placeholder="Verse" DebounceTime="200"
                               @bind-Value="verseIdSearchTerm" @bind-Value:event="oninput" OnValueChanged="OnVerseInputQuery" />
               
                <DebounceInput type="text" class="border-0 h-16 w-1/2 rounded-xl bg-black px-4 text-sm" placeholder="Bible Search" DebounceTime="200"
                               @bind-Value="verseSearchTerm" @bind-Value:event="oninput" OnValueChanged="OnVerseTermSearch" />

            </div>

        </div>

        <div class="flex h-full w-full overflow-y-hidden bg-black px-1 py-1">

            
            @if (isSearchingVerses)
            {
                <VerseList Id="VerseList3" Verses="searchedVerses" SelectedVerse="selectedVerse" OnVerseChanged="(async (verse) => await OnSearchVerseClick(verse))"
                    ShowBookAndChapter="showBookAndChapter"/>
            }
            else
            {
                <VerseList Id="VerseList1" Verses="verses" SelectedVerse="selectedVerse" OnVerseChanged="(async (verse) => await OnVerseChange(verse, true))"
                           VersePortions="versePortions" SelectedPortion="selectedPortion" OnVersePortionChanged="OnVersePortionChange" />

            }

            @if(doubleViewMode){
                <VerseList Id="VerseList2" Verses="doubleViewVerses" SelectedVerse="selectedVerse" OnVerseChanged="(async (verse) => await OnVerseChange(verse, false))"
                           VersePortions="versePortions" SelectedPortion="selectedPortion" OnVersePortionChanged="OnVersePortionChange" />
            }

        </div>



    </div>

</div>


